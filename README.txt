-Реализовано django-приложения(со стандартной системой авторизации(переопределена модель User))
    -добавлены end points:
        1.'' - страница отображает список все пользователей и список заданий для конкретного пользователя
        2.'register/' - страница регистрации где валидируються все данные по заданию
        3.'login/' - страница логина
        4.Endpoints добавления/удаления тасков
-Реализовано  Rest API (из системой авторизации с помощью JTW - токена)
Тестирование  Api проводилось с помощью программы Postman
      -JWT токен достаеться с куки,время жизни токена(определено как 3 минуты)
      - endpoints :
        1.'rest/register/' - post запросом идет регистрация пользователя в переопределенную нами модель User(валидация данных по заданию присутсвует)
        2.'rest/login/' - post запросом создаеться jwt token в куки
        3.'rest/logout/' - принудительно удалить jwt из куки(тем самым сделать логаут)
        4.'rest/user/' - get запросом можно получить данные про авторизированого пользователя(страница доступна для авторизованого пользователя)
        5.'rest/users/' - get запрос для получения списка всех пользователей(страница доступна для авторизованого пользователя)
        6.'rest/users/<int:id>/ - get , put , delete - детальный просмотр пользователя / редакторивание / удаления (страница доступна для авторизованого пользователя)
